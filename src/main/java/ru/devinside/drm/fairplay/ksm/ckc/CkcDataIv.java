package ru.devinside.drm.fairplay.ksm.ckc;

import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

/**
 * A random 16-byte initialization vector, generated by the KSM, that has a unique value for each CKC message.
 * The vector is used to initialize the first block of the AES_CBC chain.
 */
public class CkcDataIv {
    public final static int CPC_DATA_IV_SIZE = 16;

    private final byte[] iv;

    public static CkcDataIv generate() {
        byte[] randomIv = new byte[CPC_DATA_IV_SIZE];
        try {
            SecureRandom.getInstanceStrong().nextBytes(randomIv);
            return new CkcDataIv(randomIv);
        } catch (NoSuchAlgorithmException e) {
            throw new CkcSecurityException(e);
        }
    }

    public CkcDataIv(byte[] iv) {
        this.iv = iv;
    }

    public byte[] getIv() {
        return iv;
    }
}
